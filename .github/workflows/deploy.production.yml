name: 🚀 Deploy (production)
on:
  push:
    branches:
      - fix-deploy
    paths-ignore:
      - "README.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  deploy:
    name: 🚀 Scale & Deploy
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 🎈 Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@1.5

      - name: 🚀 Scale & Deploy
        if: ${{ github.ref == 'refs/heads/fix-deploy' }}
        run: |
          echo "Scaling and deploying app..."

          # Scale machines to ensure we have enough instances
          echo "Scaling machines..."
          flyctl scale vm shared-cpu-2x --memory 1024 --config ./fly.production.toml

          # Deploy with rolling strategy
          echo "Deploying with rolling strategy..."
          flyctl deploy --remote-only --config ./fly.production.toml --strategy rolling

          # Show final status
          echo "Final deployment status:"
          flyctl status --config ./fly.production.toml

          echo "Machines:"
          flyctl machines list --config ./fly.production.toml
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  # purge:
  #   name: 🧹 Purge CDN
  #   runs-on: ubuntu-latest
  #   needs: [deploy]
  #   steps:
  #     - name: 🧹 Purge All
  #       run: |
  #         curl -D - -X POST --location "https://api.fastly.com/service/${{ secrets.FASTLY_SERVICE_ID }}/purge_all" -H "Accept: application/json" -H "Fastly-Key: ${{ secrets.FASTLY_API_TOKEN }}" -H "fastly-soft-purge: 1"
